- name:  install application
  hosts: ec2_app
  become: yes
  tasks:
    - name: execute 'ls'
      command: ls
    - name: install updates
      ansible.builtin.dnf: update_cache=yes
    
    - name: Install required system packages
      ansible.builtin.dnf:
        state: present
        name:
            - ca-certificates
            - collectd-curl
            - python3-pip
            - virtualenv
            - python3-setuptools
        update_cache: true

    # - name: Add Docker GPG apt Key
    #   apt_key:
    #       url: https://download.docker.com/linux/ubuntu/gpg
    #       state: present

    # - name: Add Docker Repository
    #   apt_repository:
    #       repo: deb https://download.docker.com/linux/ubuntu focal stable
    #       state: present

    # - name: Update apt and install docker-ce
    #   apt:
    #       name: docker-ce
    #       state: latest
    #       update_cache: true

    - name: Update all packages
      yum:
        name: '*'
        state: latest
        update_only: yes

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python-pip
        - yum-utils
        - device-mapper-persistent-data
        - lvm2
        - amazon-linux-extras

    - name: Add extras repository
      shell: yum-config-manager --enable extras

    - name: Enable Some packages from amazon-linux-extras packages
      shell: "amazon-linux-extras enable python3.8 ansible2 docker"

    - name: clean yum metadata cache
      command: yum clean metadata
      args:
        warn: false

    - name: Ensure a list of yum packages are installed
      yum:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
      vars:
        packages:
        - python3.8
        - ansible
        - docker

    - name: Enable Docker CE service at startup
      service:
        name: docker
        state: started
        enabled: yes

    - name: Upgrade pip3
      shell: "python3.8 -m pip install pip --upgrade"

    - name: Ensure Python pip packages are installed
      pip:
        name: "{{ packages }}"
        executable: /usr/local/bin/pip3.8
      vars:
        packages:
        - boto
        - boto3
        - docker-compose
 

    - name: Configure AWS CLI with Access Key
      command: >
                aws configure set aws_access_key_id "{{ AWS_ACCESS_KEY_ID }}"
                && aws configure set aws_secret_access_key "{{ AWS_SECRET_ACCESS_KEY }}"
                && aws configure set default.region "{{ eu-central-1 }}"
      when: ansible_os_family == 'Debian'  # Adjust based on the OS family of your hosts               

    - name: Log into AWS account
      command: aws sts get-caller-identity
      register: aws_login_output
      when: ansible_os_family == 'Debian'  # Adjust based on the OS family of your hosts   
            
        
    - name: Log in to Amazon ECR
      shell: "$(aws ecr get-login --region eu-central-1)"

    - name: start app  
      command: 
        cmd: 'docker run --name app -e DB_USER="admin" -e DB_PASS="admin" -e DB_HOST={{ DB_IP }} -p 4000:4000 990162768441.dkr.ecr.eu-central-1.amazonaws.com/mk-repository:app'
  